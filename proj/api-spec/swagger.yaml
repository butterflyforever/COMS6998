swagger: "2.0"
info:
  description: "COMS E6998 project"
  version: "1.0.0"
  title: "More for Less - a Promotion App"
host: "api.moreforless.liuqx.net"
basePath: "/v1"

tags:
- name: "item"
  description: "The information about a commodity."
- name: "coupon"
  description: "Coupons."
- name: "cart"
  description: "Shopping carts."
- name: "user"
  description: "User profile."
- name: "saler"
  description: "Saler profile."

schemes:
- "https"

paths:
  /recommendation:
    get:
      tags:
      - "recommendation"
      parameters:
        - in: query
          name: "lat"
          type: "number"
        - in: query
          name: "lon"
          type: "number"
      responses:
        200:
          type: "ItemArray"

  /search:
    get:
      tags:
      - "search"
      parameters:
      - in: query
        name: "s"
        type: "string"




  /items/{id}:
    get:
      tags:
      - "item"
      summary: "Get the information of an item."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        required: true
        type: "string"
        description: "The id of the item."
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/Item"
        404:
          description: "The id does not exist."
    put:
      tags:
      - "item"
      summary: "Update the information of an item."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        required: true
        type: "string"
        description: "The id of the item."
      - in: "body"
        name: "body"
        description: "The information of the item."
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "Successful operation."
        404:
          description: "The id does not exist."
        400:
          description: "Bad request."

  /pictures:
    post:
      parameters:
        - in: body
          name: "body"
          required: true
          type: "file"
          description: "The image of the item."
        responses:
          200:
            description: "Successful operation."
            type: "string" # url

    delete:
      parameters:
        - in: query
          name: "url"
          required: true
          type: "string"
          description: "The url of the image"
        responses:
          200:
            description: "Successful operation."


  /items:
    post:
      tags:
      - "item"
      summary: "Create an item."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The information of the item."
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "Successful operation."
          type: "string"    # id
        400:
          description: "Bad request."


  /myhome:
    get:
      tags:
      - "user"
      summary: "Get the information of an user."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/UserProfile"
        204:
          description: "New user, register type first, paypalUrl required if is seller."

    put:
      tags:
      - "user"
      summary: "Get the information of an user."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The information of the item."
        required: true
        schema:
          $ref: "#/definitions/UserProfile"
      responses:
        200:
          description: "Successful operation."

  /orders: # finished orders
    get:
      tags:
      - "order history"
      summary: "Get finished order history"
      parameters:
      response:
        200:
          description: "Successful operation."
          schema:
            "array"
            itmes:
              $ref: "#/definitions/Order"


  /cart: # wishlist orders
    get:
      tags:
      - "cart"
      response:
        200:
          description: "Successful operation"
          schema:
            "array"
            itmes:
              $ref: "#/definitions/Order"
        403:
          description: "Forbidden. Seller has no access to carts"

    put:
      - in: query
        name: "item"
        required: true
        type: "string"
        description: "The url of the item"
      responses:
        200:
          description: "Successful operation."

    post:
      - in: query
        name: "order"
        required: true
        type: "string"
        description: "Finalize order"
      response:
        200:
          schema: "string" # paypalUrl
          description: "Paypal url of seller"

    delete:
      - in: query
        name: "items"
        required: true
        type: "array"
          items:
            type: "string"
        description: "Remove items from cart"
      response:
        200:
          description: "Item removed, GET cart again"
        404:
          description: "Item doesn't exist"


definitions:
  Item:
    type: "object"
    required:
    - "title"
    - "picture"
    - "price"
    - "stock"
    properties:
      id:
        type: "string"
      available:
        type: "integer"
      sellerId:
        type: "string"
      sellerInfo:
        type:
          $ref: "#/definitions/UserProfile"
      title:
        type: "string"
      description:
        type: "string"
      imageUrl:
        type: "array"  # file name (a.jpg)
        items:
          type: "string"
      category:
        type: "array"  # user defined keywords
        items:
          type: "string"
      tag:
        type: "array" # rekognition
        items:
          type: "string"
      price:
        type: "number"
      prvPrice:
        type: "number"
      stock:
        type: "integer"
      location:
        lon:
          type: "number"
        lat:
          type: "number"



  Order:
    type: "object"
    properties:
      id:
        type: "string"
      items:
        type: "array"
        items:
          type: "string"
      buyer:
        type: "string"
      seller:
        type: "string"
      sellerInfo:
        type:
          $ref: "#/definitions/UserProfile"
      price:
        type: "number"
      prvPrice:
        type: "number"
      finishTime:
        type: "number" # float
      status:
        type: "string" # finished, wishlist


  UserProfile:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string" # seller or buyer
      userName:
        type: "string"
      address:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      paypalUrl:
        type: "string" # url


  # VisitorInfo:
  #   type: "object"
  #   required:
  #   - "name"
  #   - "phonenumber"
  #   properties:
  #     name: 
  #       type: "string"
  #     phoneNumber:
  #       type: "string"
  #   xml:
  #     name: "VisitorInfo"

  # VisitorGreetingInfo:
  #   type: "object"
  #   required:
  #   - "name"
  #   properties:
  #     name: 
  #       type: "string"
  #   xml:
  #     name: "VisitorGreetingInfo"
